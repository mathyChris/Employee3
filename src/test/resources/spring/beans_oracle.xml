<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">


<!-- 	oracle DataSource	 -->
	<bean id="oracleDataSource" class="org.apache.commons.dbcp.BasicDataSource">
	
		<property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
<!-- 		<property name="url" value="jdbc:oracle:thin:@192.168.10.31:1521:xe"/> --> <!-- 강사님 IP -->
		<property name="username" value="spring"/>
		<property name="password" value="tiger"/>
		
	</bean>


<!-- 	<tx namesapce 만 있으면  -->
<!-- 	<tx:annotation-driven transaction-manager="transactionManager"/> -->
	<tx:annotation-driven/>
<!-- 	TransactionAspect.java에서 DataSourceTransactonManager 객체 설정  -->
	<bean id ="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	
		<constructor-arg ref="oracleDataSource"/>
	
	</bean>
	
	
	
	
	<bean id="oracleSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		
		<property name="dataSource" ref="oracleDataSource"/>
		
		<property name="databaseIdProvider">
		
			<bean class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
				
				<property name="properties">
					
					<props>
						<prop key="MySQL">mysql</prop>
						<prop key="Oracle">oracle</prop>
					</props>
				
				</property>
			
			</bean>
		
		</property>
		
		<property name="mapperLocations">
		
			<list>
			
				<value>com/hybrid/mapper/CityMapper.xml</value>
			
			</list>
		
		</property>
	
	</bean>
	
	<bean id="oracleSqlSession" class="org.mybatis.spring.SqlSessionTemplate">
	
		<constructor-arg ref="oracleSqlSessionFactory"></constructor-arg>
	
	</bean>
	
	
	<bean id="oracleCityMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		
		<property name="mapperInterface" value="com.hybrid.mapper.CityMapper"/>
		<property name="sqlSessionTemplate" ref="oracleSqlSession"/>
	
	</bean>
	
	
	
	<bean id="oracleDeptMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
	
		<property name="mapperInterface" value="com.hybrid.mapper.DeptMapper"/>
		<property name="sqlSessionTemplate" ref="oracleSqlSession"/>
	
	</bean>
	
	
	<bean id="oracleEmpMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
	
		<property name="mapperInterface" value="com.hybrid.mapper.EmpMapper"/>
		<property name="sqlSessionTemplate" ref="oracleSqlSession"/>
	
	</bean>
	
	
<!-- 	deptDao 생성하면서 여기에 등록 -->
	<bean id="oracleDeptDao" class="com.hybrid.dao.DeptDao">
	
		<property name="deptMapper"  ref="oracleDeptMapper"/>
	
	</bean>
	
	
<!-- 	EmpDao 생성하면서 여기에 등록 -->
	<bean id ="oracleEmpDao" class="com.hybrid.dao.EmpDao">
	
		<property name="empMapper" ref="oracleEmpMapper"></property>
	
	</bean>
	
	
	
	
<!-- 	1. bean 으로  모델 객체 를 설정하는 방법-->
<!-- 	<bean id="emp1" class="com.hybrid.model.Emp"> -->
<!-- 		<property name="empno" value="100"></property> -->
<!-- 		<property name="ename" value="Clair"></property> -->
<!-- 		<property name="dept" ref="dept1"></property> -->
<!-- 	</bean> -->
	
<!-- 	<bean id="emp2" class="com.hybrid.model.Emp"> -->
<!-- 		<property name="empno" value="101"></property> -->
<!-- 		<property name="ename" value="Mark"></property> -->
<!-- 		<property name="dept" ref="dept1"></property> -->
<!-- 	</bean> -->
	
<!-- 	<bean id = "dept1" class="com.hybrid.model.Dept"> -->
	
<!-- 		<property name="deptno" value="80"></property> -->
<!-- 		<property name="dname" value="ACCOUNT2"></property> -->
<!-- 		<property name="loc" value="Seoul"></property> -->
<!-- 		<property name="emps"> -->
<!-- 			<list> -->
			
<!-- 				<ref bean="emp1"></ref> -->
<!-- 				<ref bean="emp2"></ref> -->
			
<!-- 			</list> -->
			
<!-- 		</property> -->
<!-- 	</bean> -->	
	
	
	
	
<!-- 	2. bean으로 모델 객체를 입력하는 방법  -->

	
<!-- 	<bean id = "dept1" class="com.hybrid.model.Dept"> -->
	
<!-- 		<property name="deptno" value="84"></property> -->
<!-- 		<property name="dname" value="ACCOUNT4"></property> -->
<!-- 		<property name="loc" value="Seoul"></property> -->
<!-- 		<property name="emps"> -->
		
<!-- 			<list> -->
			
<!-- 				<bean id="emp1" class="com.hybrid.model.Emp"> -->
<!-- 					<property name="empno" value="102"></property> -->
<!-- 					<property name="ename" value="Clant"></property> -->
<!-- 					<property name="dept" ref="dept1"></property> -->
<!-- 				</bean> -->
				
<!-- 				<bean id="emp2" class="com.hybrid.model.Emp"> -->
<!-- 					<property name="empno" value="103"></property> -->
<!-- 					<property name="ename" value="Hamingway"></property> -->
<!-- 					<property name="dept" ref="dept1"></property> -->
<!-- 				</bean> -->
				
<!-- 			</list> -->
			
<!-- 		</property> -->
<!-- 	</bean> -->
	
	
	
	
	<aop:aspectj-autoproxy/> <!-- auto_proxy 는 자동 삽입   -->
	
<!-- 	<bean class="com.hybrid.aspect.LogDaoAspect"/> -->
	<bean class="com.hybrid.aspect.LogAspect"/>
	
<!-- 	<bean class="com.hybrid.aspect.TransactionAspect" > -->
	
<!-- 		<property name="dataSource" ref="oracleDataSource" /> -->
	
<!-- 	</bean> -->
	
	<bean class="com.hybrid.service.DeptRegisterService">
	
		<property name="deptDao" ref="oracleDeptDao"></property>
		<property name="empDao" ref="oracleEmpDao"></property> <!-- service 파일에서 생성한 set 설정을 등록하기 위해-->
		<property name="dataSource" ref="oracleDataSource"></property> 
	
	</bean>
	
	
	<bean class="com.hybrid.service.DeptUnRegisterService">
	
<!-- 		<property name="deptDao" ref="oracleDeptDao"></property> -->
		<property name="deptDao" ref="oracleDeptDao"></property>
		<property name="empDao" ref="oracleEmpDao"></property> <!-- service 파일에서 생성한 set 설정을 등록하기 위해-->
		<property name="dataSource" ref="oracleDataSource"></property> 
	
	</bean>
	
	
</beans>








